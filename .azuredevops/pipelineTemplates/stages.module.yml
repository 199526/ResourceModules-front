parameters:
  removeDeployment: true
  prerelease: false
  templateFilePath: ''
  moduleResourceGroupName: ''

stages:
  - stage: init
    displayName: Initialize pipeline
    jobs:
      - template: /.azuredevops/pipelineTemplates/jobs.getParameterFiles.yml

  # - stage: validation
  #   dependsOn: []
  #   displayName: Static validation
  #   jobs:
  #     - template: /.azuredevops/pipelineTemplates/jobs.validateModulePester.yml

  # - stage: dependencyDeployment
  #   displayName: Dependency deployment
  #   dependsOn:
  #     # - validation
  #     - init
  #   jobs:
  #     - template: /.azuredevops/pipelineTemplates/jobs.validateModuleDeployment.yml
  #       parameters:
  #         templateFilePath: '$(modulePath)/.dependencies/dependencies.bicep'
  #         resourceGroupName: '${{ parameters.moduleResourceGroupName }}'
  #         removeDeployment: false

  - stage: deployment
    displayName: Deployment validation
    dependsOn:
      # - dependencyDeployment
      - init
    variables:
      $parameterTests: $[ stageDependencies.init.getParameterFilePaths.outputs['getParameterFilePathsTask.parameterTests'] ]
    jobs:
      - job: print2
        strategy:
          matrix: $parameterTests
        steps:
          - task: PowerShell@2
            displayName: 'Print2'
            inputs:
              targetType: inline
              pwsh: true
              script: |
                # $json='$(parameterTests)'
                $json="test"
                # $json = '${{ parameters.parameterFilePath}}'
                # $json = ConvertFrom-Json '${{ parameters.parameterFilePath}}'
                Write-Verbose "json 1 $json" -Verbose

                # Write-Host "##vso[task.setvariable variable=$jobsToRunInParallel;isOutput=true]$json"
              name: printvar2
      # - template: /.azuredevops/pipelineTemplates/jobs.validateModuleDeployment.yml
      #   parameters:
      #     templateFilePath: '$(modulePath)/deploy.bicep'
      #     parameterFilePath: $(parameterTests)
      #     resourceGroupName: '${{ parameters.moduleResourceGroupName }}'


  # - stage: dependencyRemoval
  #   displayName: Dependency removal
  #   dependsOn:
  #     - dependencyDeployment
  #     # - deployment
  #   condition: succeededOrFailed()
  #   # and(succeededOrFailed(), ne(dependencies.dependencyDeployment.outputs['deploy.deployModule.deploymentName'],''))
  #   variables:
  #     deploymentName: $[ stageDependencies.dependencyDeployment.deploy.outputs['deployModule.deploymentName'] ]
  #   jobs:
  #     - template: /.azuredevops/pipelineTemplates/jobs.validateModuleDeployment.yml
  #       parameters:
  #         templateFilePath: '$(modulePath)/.dependencies/dependencies.bicep'
  #         resourceGroupName: '${{ parameters.moduleResourceGroupName }}'
  #         deploymentName: '$(deploymentName)'
  #         enableDeployment: false

  # - stage: Publishing
  #   dependsOn:
  #     - deployment
  #   displayName: Publish module
  #   condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/main'), eq(variables['Build.SourceBranch'], 'refs/heads/master'), eq('${{ parameters.prerelease }}', 'true')))
  #   jobs:
  #     - template: /.azuredevops/pipelineTemplates/jobs.publishModule.yml
