name: 'AnalysisServices - Servers'

parameters:
  - name: removeDeployment
    displayName: Remove deployed module
    type: boolean
    default: true
  - name: prerelease
    displayName: Publish prerelease module
    type: boolean
    default: false

trigger:
  batch: true
  branches:
    include:
      - main
  paths:
    include:
      - '/.azuredevops/modulePipelines/ms.analysisservices.servers.yml'
      - '/.azuredevops/pipelineTemplates/module.*.yml'
      - '/arm/Microsoft.AnalysisServices/servers/*'
    exclude:
      - '/**/*.md'

variables:
  - template: '/.azuredevops/pipelineVariables/global.variables.yml'
  - group: 'PLATFORM_VARIABLES'
  - name: modulePath
    value: '/arm/Microsoft.AnalysisServices/servers'
  - name: 'moduleResourceGroupName'
    value: 'test-ms.analysisservices-servers-rg'

stages:
  # - stage: Validation
  #   displayName: Pester tests
  #   jobs:
  #     - template: /.azuredevops/pipelineTemplates/jobs.validateModulePester.yml

  - stage: DependencyDeployment
    displayName: Dependency Deployment
    jobs:
      - job: deploy
        displayName: Deploy dependencies
        pool:
          ${{ if ne(variables['vmImage'], '') }}:
            vmImage: ${{ variables['vmImage'] }}
          ${{ if ne(variables['poolName'], '') }}:
            name: ${{ variables['poolName'] }}
        steps:
          - template: /.azuredevops/pipelineTemplates/steps.deployTemplate.yml
            parameters:
              templateFilePath: '$(modulePath)/.dependencies/dependencies.bicep'
              resourceGroupName: '$(moduleResourceGroupName)'

  - stage: Deployment
    displayName: Deployment tests
    jobs:
      - template: /.azuredevops/pipelineTemplates/jobs.getParameterFiles.yml
      - job: deploy
        displayName: Deploy
        dependsOn: getParameterFilePaths
        pool:
          ${{ if ne(variables['vmImage'], '') }}:
            vmImage: ${{ variables['vmImage'] }}
          ${{ if ne(variables['poolName'], '') }}:
            name: ${{ variables['poolName'] }}
        strategy:
          matrix: $[ dependencies.getParameterFilePaths.outputs['getParameterFilePathsTask.parameterTests'] ]
        steps:
          - template: /.azuredevops/pipelineTemplates/steps.deployTemplate.yml
            parameters:
              templateFilePath: '$(modulePath)/deploy.bicep'
              parameterFilePath: '$(parameterFilePath)'
              resourceGroupName: '$(moduleResourceGroupName)'
          - ${{ if eq(parameters.removeDeployment, 'true') }}:
              - template: /.azuredevops/pipelineTemplates/steps.removeTemplateDeployment.yml
                parameters:
                  templateFilePath: '$(modulePath)/deploy.bicep'
                  resourceGroupName: '$(moduleResourceGroupName)'
                  deploymentName: '$(deploymentName)'

  - ${{ if eq(parameters.removeDeployment, 'true') }}:
      - stage: DependencyRemoval
        displayName: Dependency Removal
        dependsOn:
          - DependencyDeployment
          - Deployment
        condition: and(succeededOrFailed(), ne(variables['deploymentName'],''))
        jobs:
          - job: remove
            displayName: Remove dependencies
            pool:
              ${{ if ne(variables['vmImage'], '') }}:
                vmImage: ${{ variables['vmImage'] }}
              ${{ if ne(variables['poolName'], '') }}:
                name: ${{ variables['poolName'] }}
            variables:
              deploymentName: $[ stageDependencies.DependencyDeployment.deploy.outputs['DeployModule.deploymentName'] ]
            steps:
              - template: /.azuredevops/pipelineTemplates/steps.removeTemplateDeployment.yml
                parameters:
                  templateFilePath: '$(modulePath)/.dependencies/dependencies.bicep'
                  deploymentName: '$(deploymentName)'
                  resourceGroupName: '$(moduleResourceGroupName)'

  - stage: Publishing
    dependsOn:
      - Deployment
    displayName: Publish module
    condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/main'), eq(variables['Build.SourceBranch'], 'refs/heads/master'), eq('${{ parameters.prerelease }}', 'true')))
    jobs:
      - template: /.azuredevops/pipelineTemplates/jobs.publishModule.yml
