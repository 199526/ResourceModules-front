name: 'AnalysisServices - Servers'

parameters:
  - name: removeDeployment
    displayName: Remove deployed module
    type: boolean
    default: true
  - name: prerelease
    displayName: Publish prerelease module
    type: boolean
    default: false

trigger:
  batch: true
  branches:
    include:
      - main
  paths:
    include:
      - '/.azuredevops/modulePipelines/ms.analysisservices.servers.yml'
      - '/.azuredevops/pipelineTemplates/module.*.yml'
      - '/arm/Microsoft.AnalysisServices/servers/*'
    exclude:
      - '/**/*.md'

variables:
  - template: '/.azuredevops/pipelineVariables/global.variables.yml'
  - group: 'PLATFORM_VARIABLES'
  - name: modulePath
    value: '/arm/Microsoft.AnalysisServices/servers'

stages:
  # - stage: Validation
  #   displayName: Pester tests
  #   jobs:
  #     - template: /.azuredevops/pipelineTemplates/jobs.validateModulePester.yml

  - stage: DependencyDeployment
    displayName: Dependency Deployment
    jobs:
      - job: deploy
        displayName: Deploy dependencies
        pool:
          ${{ if ne(variables['vmImage'], '') }}:
            vmImage: ${{ variables['vmImage'] }}
          ${{ if ne(variables['poolName'], '') }}:
            name: ${{ variables['poolName'] }}
        steps:
          - template: /.azuredevops/pipelineTemplates/steps.deployTemplate.yml
            parameters:
              templatePath: '$(modulePath)/.dependencies/dependencies.bicep'

  - stage: Deployment
    displayName: Deployment tests
    jobs:
      - job: getParameterFilePaths
        displayName: Get parameter file paths
        pool:
          ${{ if ne(variables['vmImage'], '') }}:
            vmImage: ${{ variables['vmImage'] }}
          ${{ if ne(variables['poolName'], '') }}:
            name: ${{ variables['poolName'] }}
        steps:
          - task: PowerShell@2
            displayName: 'Fetch parameter files'
            name: getParameterFilePathsTask
            inputs:
              targetType: inline
              pwsh: true
              script: |
                # Load used functions
                . (Join-Path '$(System.DefaultWorkingDirectory)' 'utilities' 'pipelines' 'sharedScripts' 'Set-EnvironmentOnAgent.ps1')

                $inputObject = @{
                  ModulePath = Join-Path '$(System.DefaultWorkingDirectory)' '$(modulePath)'
                }

                # Set agent up
                $parameterFilePaths = Get-ModuleParameterFiles @inputObject

                $testTable = @{}
                foreach($parameterFilePath in $parameterFilePaths) {
                  $parameterFileName = Split-Path $parameterFilePath -Leaf
                  $testTable[$parameterFileName] = @{
                    parameterFilePath = $parameterFilePath
                  }
                }
                Write-Host ('##vso[task.setVariable variable=parameterTests;isOutput=true]{0}' -f ($testTable | ConvertTo-Json -Compress))

      - job: deploy
        displayName: Deploy
        dependsOn: getParameterFilePaths
        pool:
          ${{ if ne(variables['vmImage'], '') }}:
            vmImage: ${{ variables['vmImage'] }}
          ${{ if ne(variables['poolName'], '') }}:
            name: ${{ variables['poolName'] }}
        strategy:
          matrix: $[ dependencies.getParameterFilePaths.outputs['getParameterFilePathsTask.parameterTests'] ]
        steps:
          - template: /.azuredevops/pipelineTemplates/steps.deployTemplate.yml
            parameters:
              templateFilePath: '$(modulePath)/deploy.bicep'
              parameterFilePath: '$(modulePath)/$(parameterFilePath)'
          - ? ${{ if and( eq(parameters.removeDeployment, 'true'), not(eq(variables['deploymentName'],'')) ) }}
            : - template: /.azuredevops/pipelineTemplates/steps.removeTemplateDeployment.yml
                parameters:
                  parameterFilePath: '$(modulePath)/$(parameterFilePath)'
                  deploymentName: '$(deploymentName)'

  - stage: DependencyRemoval
    displayName: Dependency Removal
    dependsOn:
      - DependencyDeployment
      - Deployment
    condition: and(succeededOrFailed(), eq(${{ parameters.removeDeployment }}, 'true'), not(eq(variables['deploymentName'],'')))
    jobs:
      - job: remove
        displayName: Remove dependencies
        pool:
          ${{ if ne(variables['vmImage'], '') }}:
            vmImage: ${{ variables['vmImage'] }}
          ${{ if ne(variables['poolName'], '') }}:
            name: ${{ variables['poolName'] }}
        variables:
          deploymentName: $[ stageDependencies.DependencyDeployment.deploy.outputs['DeployModule.deploymentName'] ]
        steps:
          - template: /.azuredevops/pipelineTemplates/steps.removeTemplateDeployment.yml
            parameters:
              templatePath: '$(modulePath)/.dependencies/dependencies.bicep'
              deploymentName: '$(deploymentName)'

  - stage: Publishing
    dependsOn:
      - Deployment
    displayName: Publish module
    condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/main'), eq(variables['Build.SourceBranch'], 'refs/heads/master'), eq('${{ parameters.prerelease }}', 'true')))
    jobs:
      - template: /.azuredevops/pipelineTemplates/jobs.publishModule.yml
